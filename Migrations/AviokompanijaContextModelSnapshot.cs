// <auto-generated />
using System;
using Aviokompanija.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Aviokompanija.Migrations
{
    [DbContext(typeof(AviokompanijaContext))]
    partial class AviokompanijaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Aviokompanija.Models.Aviocompany", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Naziv");

                    b.Property<string>("lokacija")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("lokacija");

                    b.HasKey("ID");

                    b.ToTable("Aviokompanija");
                });

            modelBuilder.Entity("Aviokompanija.Models.Avion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<int?>("AviokompanijaID")
                        .HasColumnType("int");

                    b.Property<int>("brojSedista")
                        .HasColumnType("int")
                        .HasColumnName("brojSedista");

                    b.Property<string>("kodniNaziv")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("kodniNaziv");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("model");

                    b.HasKey("ID");

                    b.HasIndex("AviokompanijaID");

                    b.ToTable("Avion");
                });

            modelBuilder.Entity("Aviokompanija.Models.Destinacija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .UseIdentityColumn();

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Naziv");

                    b.Property<string>("nazivAerodroma")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("nazivAerodroma");

                    b.Property<string>("zemlja")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("zemlja");

                    b.HasKey("ID");

                    b.ToTable("Destinacija");
                });

            modelBuilder.Entity("Aviokompanija.Models.ZakazanLet", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("AvionID")
                        .HasColumnType("int");

                    b.Property<int>("DestinacijaID")
                        .HasColumnType("int");

                    b.Property<int>("OdlazniLet")
                        .HasColumnType("int")
                        .HasColumnName("OdlazniLet");

                    b.Property<DateTime>("Vreme")
                        .HasColumnType("datetime2")
                        .HasColumnName("Vreme");

                    b.Property<int>("duzinaLeta")
                        .HasColumnType("int")
                        .HasColumnName("duzinaLeta");

                    b.HasKey("ID");

                    b.HasIndex("AvionID");

                    b.HasIndex("DestinacijaID");

                    b.ToTable("DestinationAirplane");
                });

            modelBuilder.Entity("Aviokompanija.Models.Avion", b =>
                {
                    b.HasOne("Aviokompanija.Models.Aviocompany", "Aviokompanija")
                        .WithMany("Airplane")
                        .HasForeignKey("AviokompanijaID");

                    b.Navigation("Aviokompanija");
                });

            modelBuilder.Entity("Aviokompanija.Models.ZakazanLet", b =>
                {
                    b.HasOne("Aviokompanija.Models.Avion", "Avion")
                        .WithMany("ZakazanLet")
                        .HasForeignKey("AvionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Aviokompanija.Models.Destinacija", "Destinacija")
                        .WithMany("ZakazanLet")
                        .HasForeignKey("DestinacijaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avion");

                    b.Navigation("Destinacija");
                });

            modelBuilder.Entity("Aviokompanija.Models.Aviocompany", b =>
                {
                    b.Navigation("Airplane");
                });

            modelBuilder.Entity("Aviokompanija.Models.Avion", b =>
                {
                    b.Navigation("ZakazanLet");
                });

            modelBuilder.Entity("Aviokompanija.Models.Destinacija", b =>
                {
                    b.Navigation("ZakazanLet");
                });
#pragma warning restore 612, 618
        }
    }
}
